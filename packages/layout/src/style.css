/* === Base FlexLayout Styles (Adapted from gray.css) === */

.flexlayout__layout {
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  position: absolute;
  display: flex;
  /* Define font defaults using global variables */
  font-size: var(
    --font-size,
    medium
  ); /* Fallback if --font-size isn't globally set */
  font-family: var(--font-sans);
  color: var(--foreground);
  background-color: var(--background);
}

.flexlayout__layout
  .flexlayout__tabset_container:first-child
  .flexlayout__tabset_tabbar_inner_tab_container {
  padding-left: 40px;
  gap: 1px;
}

.flexlayout__layout_overlay {
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  position: absolute;
  z-index: 1000;
  background-color: oklch(from var(--primary) l c h / 0.05);
}

.flexlayout__layout_tab_stamps {
  position: absolute;
  top: -10000px;
  z-index: 100;
  display: flex;
  flex-direction: column;
  align-items: start;
}

.flexlayout__layout_moveables {
  visibility: hidden;
  position: absolute;
  width: 100px;
  height: 100px;
  top: -20000px;
}

.flexlayout__layout_main {
  display: flex;
  flex-basis: 0px;
  min-width: 0;
  min-height: 0;
  flex-grow: 1;
  position: relative;
}

.flexlayout__layout_border_container {
  display: flex;
  flex-basis: 0px;
  min-width: 0;
  min-height: 0;
  flex-grow: 1;
}

.flexlayout__layout_border_container_inner {
  display: flex;
  flex-basis: 0px;
  min-width: 0;
  min-height: 0;
  flex-grow: 1;
}

/* Default splitter styles - overridden later by custom styles */
.flexlayout__splitter {
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--border); /* Default to border color */
  touch-action: none;
  z-index: 10;
}

/* Default hover - overridden later */
.flexlayout__splitter:hover {
  transition: background-color ease-in 0.1s;
  background-color: var(--muted); /* Default hover */
}

.flexlayout__splitter_horz {
  height: 100%;
  width: 2px !important;
  min-width: 2px !important;
}

.flexlayout__splitter_vert {
  width: 100% !important;
  height: 2px !important;
  min-height: 2px !important;
}

/* CHANGE 1: Splitter Drag Style - Faded look */
.flexlayout__splitter_drag {
  position: absolute;
  z-index: 1000;
  /* Faded look using accent color with low alpha */
  background-color: oklch(from var(--border) l c h);
  /* Remove flex centering */
  /* display: flex; */
  /* align-items: center; */
  /* justify-content: center; */
}
.dark .flexlayout__splitter_drag {
  /* Slightly more visible in dark mode */
  background-color: oklch(from var(--accent) l c h / 0.25);
}

/* Splitter handle styling (optional, can be customized) */
.flexlayout__splitter_handle {
  background-color: var(--muted-foreground);
  border-radius: 3px;
}

.flexlayout__splitter_handle_horz {
  width: 3px;
  height: 30px;
}

.flexlayout__splitter_handle_vert {
  width: 100%;
  height: 3px;
}

.flexlayout__splitter_extra {
  touch-action: none;
  background-color: transparent;
}

/* Drag/drop outline styles */
.flexlayout__outline_rect {
  position: absolute;
  pointer-events: none;
  box-sizing: border-box;
  border: 2px solid var(--primary); /* Use primary color */
  background: oklch(
    from var(--primary) l c h / 0.1
  ); /* Use primary with low alpha */
  border-radius: var(--radius-sm); /* Use smaller radius */
  z-index: 1000;
}

.flexlayout__outline_rect_edge {
  pointer-events: none;
  border: 2px solid var(--secondary); /* Use secondary color */
  background: oklch(
    from var(--secondary) l c h / 0.1
  ); /* Use secondary with low alpha */
  border-radius: var(--radius-sm);
  z-index: 1000;
  box-sizing: border-box;
}

.flexlayout__edge_rect {
  position: absolute;
  z-index: 1000;
  background-color: var(--muted);
  pointer-events: none;
  display: flex;
  align-items: center;
  justify-content: center;
  display: none;
}

.flexlayout__drag_rect {
  color: var(--accent-foreground);
  background-color: var(--accent);
  border: 2px solid var(--border);
  border-radius: var(--radius-sm);
  box-sizing: border-box;
  display: flex;
  justify-content: center;
  flex-direction: column;
  overflow: hidden;
  padding: 0.3em 0.8em;
  word-wrap: break-word;
  /* Inherit font from layout */
  font-size: inherit;
  font-family: inherit;
}

/* Row styles - overridden by custom styles later */
.flexlayout__row {
  display: flex;
  flex-basis: 0px;
  min-width: 0;
  min-height: 0;
  position: relative;
  box-sizing: border-box;
  overflow: hidden;
  /* Default gap - overridden later */
  /* gap: 0.5rem; */
  background-color: var(--background); /* Default */
}

/* TabSet styles - Base structure, colors overridden later */
.flexlayout__tabset {
  display: flex;
  flex-direction: column;
  position: relative;
  background-color: var(--background); /* Default, overridden by custom */
  color: var(--foreground);
  box-sizing: border-box;
  font-family: inherit;
  overflow: hidden;
  flex-grow: 1;
}

.flexlayout__tabset_container {
  display: flex;
  flex-basis: 0px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: hidden;
  flex-grow: 1;
  /* Default padding/background - overridden later */
  /* padding: 0; */
  background-color: var(--background); /* Default */
}

.flexlayout__tabset_tab_divider {
  width: 0px;
  padding: 0px;
}

/* Tab Content Area - Background overridden later */
.flexlayout__tabset_content {
  display: flex;
  flex-basis: 0px;
  min-width: 0;
  min-height: 0;
  flex-grow: 1;
  box-sizing: border-box;
  position: relative;
  /* Default background - overridden later */
  background-color: var(--background);
}

.flexlayout__tabset_header {
  display: flex;
  align-items: center;
  padding: 3px 3px 3px 5px; /* Default padding */
  box-sizing: border-box;
  border-bottom: 1px solid var(--border);
  color: var(--muted-foreground); /* Header text usually muted */
  background-color: var(--muted); /* Header background muted */
  font-size: inherit;
}

.flexlayout__tabset_header_content {
  flex-grow: 1;
}

/* Tab Bar - Structure, background/border overridden later */
.flexlayout__tabset_tabbar_outer {
  box-sizing: border-box;
  background-color: var(--background); /* Default, overridden later */
  overflow: hidden;
  display: flex;
  font-size: inherit;
}

/* CHANGE 3: Adjust Tab Bar Outer for Toolbar positioning */
.flexlayout__tabset_tabbar_outer_top {
  height: 38px; /* Match button height + border */
  border-bottom: 1px solid var(--border); /* Use standard border */
  background-color: var(--sidebar) !important; /* Use sidebar bg for tab bar */
}

.flexlayout__tabset_tabbar_outer_bottom {
  padding: 0px 2px 0px 2px;
  border-top: 1px solid var(--border);
}

/* CHANGE 3: Ensure Inner Tab Bar allows Toolbar at end */
.flexlayout__tabset_tabbar_inner {
  position: relative;
  box-sizing: border-box;
  display: flex;
  flex-grow: 1; /* Takes up available space before toolbar */
  overflow: hidden; /* Handles tab overflow */
}

/* Tab Container - Padding overridden later */
.flexlayout__tabset_tabbar_inner_tab_container {
  position: relative;
  display: flex;
  /* Default padding - overridden later */
  padding-left: 4px;
  padding-right: 4px;
  box-sizing: border-box;
  white-space: nowrap;
}

.flexlayout__tabset_tabbar_inner_tab_container_top {
  border-top: 2px solid transparent; /* Keep for structure */
}

.flexlayout__tabset_tabbar_inner_tab_container_bottom {
  border-bottom: 2px solid transparent; /* Keep for structure */
}

/* Tab Stamp (used for measuring) */
.flexlayout__tab_button_stamp {
  display: inline-flex;
  align-items: center;
  gap: 0.3em;
  white-space: nowrap;
  box-sizing: border-box;
}

/* Individual Tab Content Area - Background/color overridden later */
.flexlayout__tab {
  overflow: hidden;
  box-sizing: border-box;
  background-color: var(--background); /* Default */
  color: var(--foreground); /* Default */
  position: relative;
  flex-grow: 1; /* Ensure tab content fills space */
  display: flex; /* Needed for inner content */
  flex-direction: column; /* Needed for inner content */
}

.flexlayout__tab_moveable {
  position: relative;
  height: 100%;
  min-width: 1px;
  min-height: 1px;
  overflow: auto;
  box-sizing: border-box;
}

.flexlayout__tab_overlay {
  z-index: 20;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: oklch(0 0 0 / 0.25); /* Semi-transparent black */
}

/* Tab Button Base - Structure, appearance overridden later */
.flexlayout__tab_button {
  display: flex;
  gap: 0.3em;
  align-items: center;
  box-sizing: border-box;
  /* padding: 3px 0.5em; */ /* Default padding - overridden later */
  cursor: pointer;
}

/* Stretch button (used in borders) */
.flexlayout__tab_button_stretch {
  background-color: transparent;
  color: var(--foreground); /* Default */
  width: 100%;
  padding: 3px 0em;
  text-wrap: nowrap;
  display: flex;
  gap: 0.3em;
  align-items: center;
  box-sizing: border-box;
  cursor: pointer;
}
@media (hover: hover) {
  .flexlayout__tab_button_stretch:hover {
    color: var(--primary); /* Hover effect */
  }
}

.flexlayout__tab_button_leading {
  display: flex;
}

.flexlayout__tab_button_content {
  display: flex;
  text-wrap: nowrap;
  overflow: hidden; /* Prevent content overflow */
  text-overflow: ellipsis; /* Add ellipsis if content too long */
}

/* Tab Rename Textbox */
.flexlayout__tab_button_textbox {
  border: 1px solid var(--input);
  font-family: inherit;
  font-size: inherit;
  color: var(--foreground);
  background-color: var(--background);
  border-radius: var(--radius-sm);
  width: 10em;
  padding: 2px 4px;
}
.flexlayout__tab_button_textbox:focus {
  outline: 2px solid var(--ring);
  outline-offset: 1px;
  border-color: var(--primary); /* Indicate focus on border too */
}

/* Close Button / Trailing Icons Container */
.flexlayout__tab_button_trailing {
  display: flex;
  visibility: hidden; /* Hidden by default */
  border-radius: var(--radius-sm);
  margin-left: 0.5em; /* Space from content */
  color: var(--muted-foreground);
}
.flexlayout__tab_button_trailing:hover {
  background-color: oklch(from var(--muted) l c h / 0.5); /* Subtle hover */
  color: var(--foreground); /* Make icon clearer on hover */
}
/* Show on tab hover */
@media (hover: hover) {
  .flexlayout__tab_button:hover .flexlayout__tab_button_trailing {
    visibility: visible;
  }
}
/* Always show on selected tab */
.flexlayout__tab_button--selected .flexlayout__tab_button_trailing {
  visibility: visible;
}

/* Overflow Menu Button */
.flexlayout__tab_button_overflow {
  display: flex;
  align-items: center;
  border: none;
  color: var(--muted-foreground);
  font-size: inherit;
  background-color: transparent;
  padding: 2px;
  margin-left: 4px;
  border-radius: var(--radius-sm);
  flex-shrink: 0; /* Prevent shrinking */
}
.flexlayout__tab_button_overflow:hover {
  background-color: oklch(from var(--muted) l c h / 0.5);
  color: var(--foreground);
}

.flexlayout__tab_toolbar {
  display: flex;
  align-items: center;
  gap: 0.3em;
  padding-left: 0.5em;
  flex-shrink: 0;
}

/* Icons/Buttons within Toolbar */
.flexlayout__tab_toolbar_icon,
.flexlayout__tab_toolbar_button {
  border: none;
  outline: none;
  font-size: inherit;
  margin: 0px;
  background-color: transparent;
  border-radius: var(--radius-sm);
  padding: 2px;
  color: var(--muted-foreground);
  display: inline-flex; /* Helps alignment */
  align-items: center; /* Helps alignment */
  justify-content: center; /* Helps alignment */
}

@media (hover: hover) {
  .flexlayout__tab_toolbar_button:hover {
    background-color: oklch(from var(--muted) l c h / 0.5);
    color: var(--foreground);
  }
}

.flexlayout__tab_toolbar_sticky_buttons_container {
  display: flex;
  gap: 0.3em;
  padding-left: 5px;
  align-items: center;
}

/* Floating Tab Placeholder */
.flexlayout__tab_floating {
  overflow: auto;
  position: absolute;
  box-sizing: border-box;
  color: var(--foreground);
  background-color: var(--background);
  display: flex;
  justify-content: center;
  align-items: center;
  border: 1px dashed var(--border);
  border-radius: var(--radius);
}
.flexlayout__tab_floating_inner {
  overflow: auto;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 1em;
}
.flexlayout__tab_floating_inner div {
  margin-bottom: 5px;
  text-align: center;
}
.flexlayout__tab_floating_inner div a {
  color: var(--primary);
}

/* Border Styles (Base Structure) */
.flexlayout__border {
  box-sizing: border-box;
  overflow: hidden;
  display: flex;
  font-size: inherit;
  font-family: inherit;
  color: var(--sidebar-foreground); /* Use sidebar colors for borders */
  background-color: var(--sidebar);
}

/* Border Content Area */
.flexlayout__border_tab_contents {
  box-sizing: border-box;
  overflow: hidden;
  background-color: var(--background); /* Content area uses main background */
  flex-grow: 1; /* Allow content to fill space */
}

/* Border Layouts */
.flexlayout__border_top {
  border-bottom: 1px solid var(--sidebar-border);
  align-items: center;
}
.flexlayout__border_bottom {
  border-top: 1px solid var(--sidebar-border);
  align-items: center;
}
.flexlayout__border_left {
  border-right: 1px solid var(--sidebar-border);
  align-content: center;
  flex-direction: column;
}
.flexlayout__border_right {
  border-left: 1px solid var(--sidebar-border);
  align-content: center;
  flex-direction: column;
}

.flexlayout__border_inner {
  position: relative;
  box-sizing: border-box;
  display: flex;
  overflow: hidden;
  flex-grow: 1;
}

.flexlayout__border_inner_tab_container {
  white-space: nowrap;
  display: flex;
  padding-left: 2px;
  padding-right: 2px;
  box-sizing: border-box;
  position: absolute;
  width: 10000px; /* For rotation trick */
}
.flexlayout__border_inner_tab_container_right {
  transform-origin: top left;
  transform: rotate(90deg);
}
.flexlayout__border_inner_tab_container_left {
  flex-direction: row-reverse;
  transform-origin: top right;
  transform: rotate(-90deg);
}

.flexlayout__border_tab_divider {
  width: 4px;
}

/* Border Tab Button */
.flexlayout__border_button {
  display: flex;
  gap: 0.3em;
  align-items: center;
  cursor: pointer;
  padding: 3px 0.5em;
  margin: 2px 0px;
  box-sizing: border-box;
  white-space: nowrap;
  border-radius: var(--radius-sm);
  color: var(--sidebar-foreground);
  background-color: transparent; /* Default */
}

.flexlayout__border_button--selected {
  background-color: var(--sidebar-accent);
  color: var(--sidebar-accent-foreground);
}
@media (hover: hover) {
  .flexlayout__border_button:hover {
    background-color: var(--sidebar-accent);
    color: var(--sidebar-accent-foreground);
  }
}
/* .flexlayout__border_button--unselected - Default state is handled by base .flexlayout__border_button */

.flexlayout__border_button_leading {
  display: flex;
}
.flexlayout__border_button_content {
  display: flex;
}

.flexlayout__border_button_trailing {
  display: flex;
  border-radius: var(--radius-sm);
  visibility: hidden; /* Hide by default */
  margin-left: 0.5em;
}
.flexlayout__border_button_trailing:hover {
  background-color: oklch(
    from var(--sidebar-primary) l c h / 0.2
  ); /* Subtle hover */
}
@media (hover: hover) {
  .flexlayout__border_button:hover .flexlayout__border_button_trailing {
    visibility: visible;
  }
}
.flexlayout__border_button--selected .flexlayout__border_button_trailing {
  visibility: visible;
}

/* Border Toolbar */
.flexlayout__border_toolbar {
  display: flex;
  gap: 0.3em;
  align-items: center;
}
.flexlayout__border_toolbar_left,
.flexlayout__border_toolbar_right {
  flex-direction: column;
  padding-top: 0.5em;
  padding-bottom: 0.3em;
}
.flexlayout__border_toolbar_top,
.flexlayout__border_toolbar_bottom {
  padding-left: 0.5em;
  padding-right: 0.3em;
}

.flexlayout__border_toolbar_button {
  border: none;
  outline: none;
  font-size: inherit;
  background-color: transparent;
  border-radius: var(--radius-sm);
  padding: 1px;
  color: var(--sidebar-foreground);
}
@media (hover: hover) {
  .flexlayout__border_toolbar_button:hover {
    background-color: oklch(from var(--sidebar-primary) l c h / 0.2);
    color: var(
      --sidebar-primary-foreground
    ); /* Assuming primary button on sidebar */
  }
}

.flexlayout__border_toolbar_button_overflow {
  display: flex;
  align-items: center;
  border: none;
  color: var(--sidebar-foreground); /* Use sidebar color */
  font-size: inherit;
  background-color: transparent;
}

/* Popup Menu Styles */
.flexlayout__popup_menu {
  font-size: inherit;
  font-family: inherit;
}

.flexlayout__popup_menu_item {
  padding: 4px 0.75em; /* Slightly more padding */
  white-space: nowrap;
  cursor: pointer;
  border-radius: var(--radius-sm);
  color: var(--popover-foreground);
}
@media (hover: hover) {
  .flexlayout__popup_menu_item:hover {
    background-color: var(--accent);
    color: var(--accent-foreground);
  }
}

.flexlayout__popup_menu_container {
  box-shadow:
    0 4px 6px -1px rgb(0 0 0 / 0.1),
    0 2px 4px -2px rgb(0 0 0 / 0.1); /* Popover shadow */
  border: 1px solid var(--border);
  color: var(--popover-foreground);
  background: var(--popover);
  border-radius: var(--radius-md);
  position: absolute;
  z-index: 1000;
  max-height: 50%;
  min-width: 150px; /* Slightly wider */
  overflow: auto;
  padding: 4px; /* Small padding around items */
}

/* Floating Window Styles */
/* These might need body styles in the popped-out window's HTML */
.flexlayout__floating_window_content {
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  position: absolute;
}

/* Error Boundary Styles */
.flexlayout__error_boundary_container {
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center; /* Center content */
  padding: 1em;
  background-color: var(--destructive);
  color: var(--destructive-foreground);
  border-radius: var(--radius);
}
.flexlayout__error_boundary_content {
  display: flex;
  align-items: center;
  text-align: center;
  flex-direction: column; /* Stack icon and text */
  gap: 0.5em;
}

/* Sizer elements (used for calculations, should be invisible) */
.flexlayout__tabset_sizer,
.flexlayout__tabset_header_sizer,
.flexlayout__border_sizer {
  position: absolute;
  top: -30000px; /* Position offscreen */
  visibility: hidden; /* Hide */
  pointer-events: none; /* Ignore clicks */
  font-size: inherit;
  font-family: inherit;
  padding: 0;
  margin: 0; /* Reset */
}

/* === Custom Overrides and Theming === */

/* Splitter styles */
.flexlayout__splitter {
  min-width: 2px !important;
  background-color: var(--sidebar-border); /* Match sidebar border */
  transition: background-color 0.1s ease-in;
}

.flexlayout__splitter:hover {
  background-color: var(--border); /* Use main border color on hover */
}

/* Tabset base styles */
.flexlayout__tabset {
  background-color: var(--background); /* Use main background */
  color: var(--foreground);
}

/* Reset padding for subsequent/nested tabsets */
.flexlayout__tabset_tabbar_inner_tab_container {
  padding-left: 4px; /* Minimal padding for others */
}

/* Tab Button base styles */
.flexlayout__tab_button {
  position: relative; /* Needed for z-index */
  z-index: 2; /* Below selected tab */
  min-width: 100px;
  max-width: 200px; /* Prevent tabs getting too wide */
  display: flex;
  justify-content: space-between; /* Pushes close button to the end */
  align-items: center;
  padding: 6px 10px; /* Vertical and horizontal padding */
  border: 1px solid transparent; /* Add transparent border for size consistency */
  border-bottom: none;
  /* Use medium radius for top corners of unselected tabs */
  border-top-left-radius: var(--radius-md);
  border-top-right-radius: var(--radius-md);
  transition:
    background-color 0.2s,
    color 0.2s,
    border-color 0.2s;
  color: var(--muted-foreground); /* Unselected tabs are muted */
  background-color: transparent; /* Unselected tabs are transparent */
}

/* Unselected Tab specific adjustments */
.flexlayout__tab_button--unselected {
  /* Ensure consistent padding with selected */
  padding-bottom: 6px;
}

/* Tab Button Hover */
.flexlayout__tab_button:hover {
  /* On hover, preview the accent state */
  background-color: var(--accent);
  color: var(--accent-foreground);
  border-color: var(--border); /* Show border on hover */
  z-index: 3; /* Bring hover slightly forward */
  margin-bottom: -1px; /* Ensure it aligns like selected */
  /* Match selected radius on hover */
  border-top-left-radius: var(--radius);
  border-top-right-radius: var(--radius);
}

/* CHANGE 2: Selected Tab with Borders and Radius */
.flexlayout__tab_button--selected {
  background-color: var(--background); /* Selected tab matches content bg */
  color: var(--foreground); /* Use standard text color */
  font-weight: 500; /* Make selected tab text slightly bolder */
  z-index: 4; /* Above hover and unselected tabs */
  padding-bottom: 6px; /* Match base padding, border adds height */
  /* Use main radius for top corners */
  border-top-left-radius: var(--radius);
  border-top-right-radius: var(--radius);
  /* Add borders */
  border: 1px solid var(--border);
  border-bottom: none; /* No bottom border, sits on tab bar */
  /* Ensure it sits correctly relative to the tab bar */
  margin-bottom: -1px; /* Overlap the tab bar's bottom border */
}

/* REMOVED: Curve pseudo-elements are replaced by borders */
/* .flexlayout__tab_button--selected::before, */
/* .flexlayout__tab_button--selected::after { ... } */

/* Tab Content Area */
.flexlayout__tab_content {
  background-color: var(
    --background
  ); /* Ensure content area uses main background */
  /* Bottom corners rounded, top corners are square to meet tab */
  border-radius: 0 0 var(--radius) var(--radius);
  overflow: hidden; /* Clip content */
  padding: 1rem; /* Example padding */
  border: 1px solid var(--border); /* Add border around content */
  border-top: none; /* Top border is visually provided by the selected tab */
  position: relative;
  z-index: 1; /* Below tabs */
  margin-top: 0; /* Align directly below tab bar bottom border */
}

/* Ensure tabset container uses sidebar background */
.flexlayout__tabset_container {
  background-color: var(--sidebar); /* Should match tab bar bg */
  padding: 0;
}

/* Style rows if they are direct children of layout */
.flexlayout__layout > .flexlayout__row {
  background-color: var(--sidebar); /* Rows use sidebar color */
  gap: 0.5rem; /* Gap between components in a row */
}

/* === Dark Mode Overrides === */

.dark .flexlayout__splitter {
  background-color: var(--sidebar-border); /* Use dark sidebar border */
}

.dark .flexlayout__splitter:hover {
  background-color: var(--border); /* Use dark main border */
}

.dark .flexlayout__tabset,
.dark .flexlayout__tab {
  background-color: var(--background); /* Use dark background */
  color: var(--foreground); /* Use dark foreground */
}

/* Ensure tab bar bg is correct */
.dark .flexlayout__tabset_tabbar_outer_top {
  background-color: var(--sidebar) !important; /* Dark sidebar bg */
  border-bottom-color: var(--border); /* Dark border */
}

/* Selected tab in dark mode */
.dark .flexlayout__tab_button--selected {
  background-color: var(--background); /* Dark background */
  color: var(--foreground); /* Dark foreground */
  border-color: var(--border); /* Use dark border */
}

/* Tab hover in dark mode */
.dark .flexlayout__tab_button:hover {
  background-color: var(--accent); /* Dark accent */
  color: var(--accent-foreground); /* Dark accent foreground */
  border-color: var(--border); /* Use dark border */
}

/* Unselected tab text color in dark mode */
.dark .flexlayout__tab_button {
  color: var(--muted-foreground); /* Dark muted foreground */
  border-color: transparent; /* Ensure transparent border */
}

/* REMOVED: Dark mode Curve pseudo-elements */
/* .dark .flexlayout__tab_button--selected::before { ... } */
/* .dark .flexlayout__tab_button--selected::after { ... } */

/* Content area in dark mode */
.dark .flexlayout__tab_content {
  background-color: var(--background); /* Dark background */
  border-color: var(--border); /* Dark border */
}

/* Tabset container dark mode */
.dark .flexlayout__tabset_container {
  background-color: var(--sidebar); /* Dark sidebar */
}

/* Rows dark mode */
.dark .flexlayout__layout > .flexlayout__row {
  background-color: var(--sidebar); /* Dark sidebar */
}

/* Border components dark mode */
.dark .flexlayout__border {
  color: var(--sidebar-foreground);
  background-color: var(--sidebar);
}
.dark .flexlayout__border_top {
  border-bottom-color: var(--sidebar-border);
}
.dark .flexlayout__border_bottom {
  border-top-color: var(--sidebar-border);
}
.dark .flexlayout__border_left {
  border-right-color: var(--sidebar-border);
}
.dark .flexlayout__border_right {
  border-left-color: var(--sidebar-border);
}

.dark .flexlayout__border_tab_contents {
  background-color: var(--background);
}

.dark .flexlayout__border_button {
  color: var(--sidebar-foreground);
}
.dark .flexlayout__border_button--selected {
  background-color: var(--sidebar-accent);
  color: var(--sidebar-accent-foreground);
}
.dark .flexlayout__border_button:hover {
  background-color: var(--sidebar-accent);
  color: var(--sidebar-accent-foreground);
}

.dark .flexlayout__border_toolbar_button {
  color: var(--sidebar-foreground);
}
.dark .flexlayout__border_toolbar_button:hover {
  background-color: oklch(from var(--sidebar-primary) l c h / 0.2);
  color: var(--sidebar-primary-foreground);
}
.dark .flexlayout__border_toolbar_button_overflow {
  color: var(--sidebar-foreground);
}

/* Popups dark mode */
.dark .flexlayout__popup_menu_item {
  color: var(--popover-foreground);
}
.dark .flexlayout__popup_menu_item:hover {
  background-color: var(--accent);
  color: var(--accent-foreground);
}
.dark .flexlayout__popup_menu_container {
  background: var(--popover);
  color: var(--popover-foreground);
  border-color: var(--border);
}
